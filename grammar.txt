S -> S S
S -> ARBITRARY_METHOD
S -> COMMENT
S -> FOR_IMPORT
S -> IFELSE
S -> PASS
S -> RAISE
S -> PRINT_METHOD
S -> WHILE_METHOD
S -> FOR_METHOD
S -> OBJECT
S -> ASSIGNMENT
S -> CLASS
S -> RETURN
S -> BREAK
S -> DEF
S -> WITH
S -> CONTINUE
FLOAT_METHOD -> CLOSE_PAR
FLOAT_METHOD -> COMA METHOD_2
FLOAT_METHOD -> PLUS NUMBERMET
FLOAT_METHOD -> MULTIPLY NUMBERMET
FLOAT_METHOD -> MINUS NUMBERMET
FLOAT_METHOD -> DIVIDE NUMBERMET
FLOAT_METHOD -> POWER NUMBERMET
COMMENT -> TO_COMMENT NEWLINE
COMMENT -> TO_COMMENT
TO_COMMENT -> 'COMMENT'
FOR_IMPORT -> 'FROM' A_IMPORT
FOR_IMPORT -> B_IMPORT
A_IMPORT -> IDENTIFIER B_IMPORT
B_IMPORT -> 'IMPORT' C_IMPORT
C_IMPORT -> IDENTIFIER D_IMPORT
C_IMPORT -> IDENTIFIER
D_IMPORT -> 'AS' E_IMPORT
E_IMPORT -> IDENTIFIER NEWLINE_IMPORT
E_IMPORT -> IDENTIFIER
NEWLINE_IMPORT -> NEWLINE
IDENTIFIER -> 'IDENTIFIER' DOT_OPERATOR
IDENTIFIER -> 'IDENTIFIER'
IDENTIFIER -> NUMBER
IDENTIFIER -> 'TRUE'
IDENTIFIER -> 'FALSE'
IDENTIFIER -> OBJECT
DOT_OPERATOR -> 'DOT_OPERATOR' IDENTIFIER
PRINT_METHOD -> PRINT METHOD_1
METHOD_1 -> OPEN_PAR METHOD_2
METHOD_2 -> OBJECT CLOSE_PAR
METHOD_2 -> CLOSE_PAR
METHOD_2 -> STRING METHOD_STRING
METHOD_2 -> NUMBER
METHOD_2 -> EXPRESSION CLOSE_PAR
METHOD_STRING -> CLOSE_PAR
METHOD_STRING -> PLUS METHOD_STRING_PLUS
METHOD_STRING -> MULTIPLY MULTIPLY_WITH_INT
METHOD_STRING -> COMA  METHOD_2
MULTIPLY_WITH_INT -> NUMBER METHOD_STRING
METHOD_STRING_PLUS -> STRING METHOD_STRING
METHOD_STRING_PLUS -> IDENTIFIER METHOD_STRING
ID_METHOD -> CLOSE_PAR
ID_METHOD -> COMA METHOD_2
ID_METHOD -> PLUS NUMBERMET
ID_METHOD -> MULTIPLY M2
ID_METHOD -> ID_METHODNUS NUMBERMET
ID_METHOD -> DIVIDE NUMBERMET
ID_METHOD -> POWER NUMBERMET
NUMBERMET -> NUMBER FLOAT_METHOD
NUMBERMET -> NUMBER ID_METHOD
NUMBERMET -> FLOAT FLOAT_METHOD
NUMBERMET -> FLOAT ID_METHOD
STRING -> 'STRING'
FLOAT -> 'FLOAT'
NUMBER -> 'NUMBER'
MULTIPLY -> 'MULTIPLY'
PRINT -> 'PRINT'
PLUS -> 'PLUS'
COMA -> 'COMA'
FUNC -> 'FUNC'
FOR_METHOD -> FOR F1
F1 -> IDENTIFIER F2
F2 -> IN F3
F3 -> IDENTIFIER COLON
F3 -> ARBITRARY_METHOD F5
F5 -> CLOSE_PAR COLON
F5 -> CLOSE_PAR
FOR -> 'FOR'
IN -> 'IN'
LEN -> 'LEN'
RANGE -> 'RANGE'
COLON -> 'COLON'
IFELSE -> IF IF2
IFELSE -> IF4
IFELSE -> IF7
IFELSE -> IF IF97
IF97 -> OBJECT IF0
IF -> 'IF'
ELSE -> 'ELSE'
ELIF -> 'ELIF'
ELIFTOK -> 'ELIFTOK'
CONTENT -> S
EXPRESSION -> OBJECT
EXPRESSION -> OBJECT A
EXPRESSION -> EXPRESSION A
A -> COMPARE_OP EXPRESSION
B -> BINARY_OP EXPRESSION
B -> ARITHMETIC_OP EXPRESSION
EXPRESSION -> OPEN_PAR C
C -> EXPRESSION CLOSE_PAR
NOT -> 'NOT'
WHILE_METHOD -> WHILE W1
W1 -> IDENTIFIER W4
W1 -> EXPRESSION W4
W1 -> OPEN_PAR W2
W2 -> IDENTIFIER W3
W2 -> EXPRESSION W3
W3 -> CLOSE_PAR W4
W4 -> COLON NEWLINE
W4 -> COLON
WHILE -> 'WHILE'
NEWLINE -> 'NEWLINE'
DEF -> DEFWORD DEF1
DEF1 -> IDENTIFIER DEF2
DEF1 -> IDENTIFIER COLON
DEF2 -> DEF4
DEF2 -> OPEN_PAR DEF3
DEF3 -> DEF4
DEF3 -> IDENTIFIER DEF4
DEF3 -> STRING DEF4
EXPRESSION -> NOT EXPRESSION
EXPRESSION -> NOT EXPRESSION
EXPRESSION -> EXPRESSION B
DEF3 -> NUMBER DEF4
DEF3 -> IDENTIFIER
DEF3 -> STRING
DEF3 -> NUMBER
DEF3 -> DEF3 DEFINBETWEEN
DEFINBETWEEN -> COMA DEF3
DEF4 -> CLOSE_PAR COLON
DEFWORD -> 'DEF'
WITH -> WITHWORD WITH0
WITH0 -> IDENTIFIER WITH1
WITH1 -> OPEN_PAR WITH2
WITH2 -> IDENTIFIER WITH3
WITH2 -> STRING WITH3
WITH2 -> NUMBER WITH3
WITH3 -> CLOSE_PAR WITH4
WITH3 -> COMA WITH2
WITH4 -> COLON
WITH4 -> 'AS' WITH5
WITH5 -> IDENTIFIER COLON
WITHWORD -> 'WITH'
COMPARE_OP -> 'EQUALS'
COMPARE_OP -> 'GREATER_OR_EQUAL_THAN'
COMPARE_OP -> 'LESS_OR_EQUAL_THAN'
COMPARE_OP -> 'GREATER_THAN'
COMPARE_OP -> 'LESS_THAN'
COMPARE_OP -> 'NOT_EQUAL'
BINARY_OP -> 'AND'
BINARY_OP -> 'OR'
CLASS -> CLASSWORD CLASS1
CLASS1 -> IDENTIFIER COLON
CLASS1 -> IDENTIFIER DEF2
CLASSWORD -> 'CLASS'
OBJECT -> 'STRING'
OBJECT -> NUMBER
OBJECT -> 'IDENTIFIER'
OBJECT -> 'FALSE'
OBJECT -> 'NONE'
OBJECT -> 'TRUE'
OBJECT -> OBJECT OBJ1
OBJECT -> STRING OBJ1
OBJECT -> OBJECT OBJ3
OBJECT -> OBJECT OBJ0
OBJECT -> OBJECT OBJ0
OBJECT -> OBJECT OBJIN
OBJIN -> IN OBJECT
OBJ0 -> ARRAY
OBJ0 -> ARRAY OBJ1
OBJ0 -> ARRAY OBJ3
OBJ1 -> 'DOT_OPERATOR' OBJ2
OBJ2 -> OBJECT
OBJ2 -> 'IDENTIFIER' ARRAY
OBJ2 -> OBJECT OBJ3
IFNEXT -> CONTENT
IF4 -> ELIFTOK IF99
IF99 -> ELIF IF5
IF5 -> EXPRESSION IF6
IF5 -> IDENTIFIER IF0
IF6 -> COLON IFNL
OBJ3 -> OPEN_PAR OBJ4
OBJ3 -> OPEN_PAR OBJCLOSE_PAR
OBJCLOSE_PAR -> CLOSE_PAR
OBJ4 -> IDENTIFIER OBJ5
OBJ4 -> STRING OBJ5
OBJ4 -> NUMBER OBJ5
OBJ4 -> OBJECT OBJ5
OBJ4 -> EXPRESSION OBJ5
OBJ4 -> OBJ5
OBJ5 -> ARITHMETIC_OP AOP1
AOP1 -> OBJ4
OBJ5 -> CLOSE_PAR
OBJ5 -> CLOSE_PAR OBJ1
OBJ2 -> OBJ1
ASSIGNMENT -> OBJECT ASS1
ASS1 -> ASSIGNTO OBJECT
ASS1 -> ASSIGNTO NUMBER
ASS1 -> ASSIGNTO STRING
ASS1 -> ASSIGNTO ARRAY
ASS1 -> ASSIGNTO EXPRESSION
ARRAY -> 'LSB' ARR1
ARR1 -> 'RSB'
ARR1 -> OBJECT 'RSB'
ARR1 -> STRING 'RSB'
ARR1 -> NUMBER 'RSB'
ARR1 -> 'IDENTIFIER' ARR2
ARR1 -> 'IDENTIFIER' 'RSB'
ARR2 -> FOR_METHOD 'RSB'
ASSIGNTO -> 'ASSIGNS'
ARITHMETIC_OP -> 'MINUS'
ARITHMETIC_OP -> 'PLUS'
ARITHMETIC_OP -> 'MULTIPLY'
ARITHMETIC_OP -> 'DIVIDE'
ARITHMETIC_OP -> 'POWER'
ARITHMETIC_OP -> 'MOD'
RETURN -> 'RETURN' OBJECT
PASS -> 'PASS'
RAISE -> 'RAISE' OBJECT
BREAK -> 'BREAK'
CONTINUE -> 'CONTINUE'
ARBITRARY_METHOD -> IDENTIFIER ARM1
ARM1 -> OPEN_PAR ARM2
ARM2 -> ARBITRARY_METHOD CLOSE_PAR
ARM2 -> ARM1 CLOSE_PAR
ARM2 -> OBJECT CLOSE_PAR
ARM2 -> EXPRESSION CLOSE_PAR
OPEN_PAR -> 'OPEN_PAR'
CLOSE_PAR -> 'CLOSE_PAR'
MULTILINE -> "TRIPLEQUOTE"
IF0 -> IN IF1
IF1 -> OBJECT COLON
IF2 -> EXPRESSION IF3
IF3 -> COLON IFNL
IF3 -> COLON
IFNL -> NEWLINE IFNEXT
IF6 -> COLON
IF7 -> ELIFTOK IF98
IF98 -> ELSE IF8
IF8 -> COLON IF9
IF8 -> COLON
IF9 -> NEWLINE IF10
IF9 -> IF10
IF10 -> CONTENT